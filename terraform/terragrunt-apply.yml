parameters:
  - name: workingDirectory
    type: string

  - name: environmentVars
    type: object

  - name: runAll
    type: boolean

  - name: applyExtraArgs
    type: string

  - name: tfPlanFile
    type: string

  - name: preApplySteps
    type: stepList

  - name: postApplySteps
    type: stepList

steps:
  - ${{ each step in parameters.preApplySteps }}:
      - ${{ step }}

  - task: Bash@3
    displayName: "[terragrunt apply]"
    condition: and(succeeded(), eq('${{ parameters.runAll }}', false))
    inputs:
      targetType: 'inline'
      workingDirectory: ${{ parameters.workingDirectory }}
      script: |
        set -eu
        terragrunt apply -input=false -auto-approve ${{ parameters.tfPlanFile }} ${{ parameters.applyExtraArgs }}
    env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)
      ${{ each envVar in parameters.environmentVars }}:
        ${{ envVar.key }}: ${{ envVar.Value }}

  - task: Bash@3
    displayName: "[terragrunt apply-all]"
    condition: and(succeeded(), eq('${{ parameters.runAll }}', true))
    inputs:
      targetType: 'inline'
      workingDirectory: ${{ parameters.workingDirectory }}
      script: |
        set -eu
        terragrunt apply-all -input=false -auto-approve ${{ parameters.tfPlanFile }} ${{ parameters.applyExtraArgs }}
    env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)
      ${{ each envVar in parameters.environmentVars }}:
        ${{ envVar.key }}: ${{ envVar.Value }}

  - ${{ each step in parameters.postApplySteps }}:
      - ${{ step }}
