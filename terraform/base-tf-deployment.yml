# Dependencies:
# - required parameters
#   - environment (environment to use), type "string"
#       valid values (must exist on Pipelines/Environments):
#         - management
#         - development
#         - production
#   - module (module name), type "string"
#   - variableGroupName (variable group with providers credentials), type "string"
#   - workingDirectory (directory with the terraform files), type "string"
#   - backendKey (terraform backend key for the tfstate file), type "string"
# - optional parameters
#   - debug (whether or not to debug pipeline), type "boolean", default false
#   - installTerraform (whether or not to install terraform binary), type "boolean", default true
#   - terraformVersion (terraform version to install), type "string", default "0.13.4"
#   - preInitSteps (list of steps to execute before init cmd), type "stepList", default []
#   - postInitSteps (list of steps to execute after init cmd), type "stepList", default []
#   - prePlanSteps (list of steps to execute before plan cmd), type "stepList", default []
#   - postPlanSteps (list of steps to execute after plan cmd), type "stepList", default []
#   - preApplySteps (list of steps to execute before apply cmd), type "stepList", default []
#   - postApplySteps (list of steps to execute after apply cmd), type "stepList", default []
#   - planEnvVars (object with environment variables mapping), type "object", default {}
#   - planExtraArgs (extra arguments for the plan command), type "string", default ""
#   - applyEnvVars (object with environment variables mapping for apply cmd), type "object", default {}
#   - applyExtraArgs (extra arguments for the apply command), type "string", default ""
#   - terraformPlanFile (terraform plan output filename), type "string", default ".terraform/tfplan.out"
#   - terraformJsonPlanFile (terraform plan JSON output filename), type "string", default "/tmp/tfplan.json"

parameters:
  - name: environment
    type: string
    values:
      - management
      - development
      - production

  - name: module
    type: string

  - name: variableGroupName
    type: string

  - name: workingDirectory
    type: string

  - name: backendKey
    type: string

  - name: debug
    type: boolean
    default: false

  - name: installTerraform
    type: boolean
    default: true

  - name: terraformVersion
    type: string
    default: 0.13.4

  - name: preInitSteps
    type: stepList
    default: []

  - name: postInitSteps
    type: stepList
    default: []

  - name: prePlanSteps
    type: stepList
    default: []

  - name: postPlanSteps
    type: stepList
    default: []

  - name: preApplySteps
    type: stepList
    default: []

  - name: postApplySteps
    type: stepList
    default: []

  - name: planEnvVars
    type: object
    default: {}

  - name: planExtraArgs
    type: string
    default: ""

  - name: applyEnvVars
    type: object
    default: {}

  - name: applyExtraArgs
    type: string
    default: ""

  - name: terraformPlanFile
    type: string
    default: tfplan.out

  - name: terraformJsonPlanFile
    type: string
    default: /tmp/tfplan.json

stages:
  - template: tf-deployment.yml
    parameters:
      environment: ${{ parameters.environment }}
      module: ${{ parameters.module }}
      variableGroupName: ${{ parameters.variableGroupName }}
      workingDirectory: ${{ parameters.workingDirectory }}
      backendKey: ${{ parameters.backendKey }}
      debug: ${{ parameters.debug }}
      installTerraform: ${{ parameters.installTerraform }}
      terraformVersion: ${{ parameters.terraformVersion }}
      preInitSteps: ${{ parameters.preInitSteps }}
      postInitSteps: ${{ parameters.postInitSteps }}
      prePlanSteps: ${{ parameters.prePlanSteps }}
      postPlanSteps: ${{ parameters.postPlanSteps }}
      preApplySteps: ${{ parameters.preApplySteps }}
      postApplySteps: ${{ parameters.postApplySteps }}
      planEnvVars: ${{ parameters.planEnvVars }}
      planExtraArgs: ${{ parameters.planExtraArgs }}
      applyEnvVars: ${{ parameters.applyEnvVars }}
      applyExtraArgs: ${{ parameters.applyExtraArgs }}
      terraformPlanFile: ${{ parameters.terraformPlanFile }}
      terraformJsonPlanFile: ${{ parameters.terraformJsonPlanFile }}
