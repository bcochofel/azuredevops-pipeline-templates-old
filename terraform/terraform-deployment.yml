parameters:
  - name: debug
    type: boolean
    default: false

  - name: varGroups
    type: object
    default: {}

  - name: vmImage
    type: string
    default: 'ubuntu-latest'

  - name: installTerraform
    type: boolean
    default: true

  - name: terraformVersion
    type: string
    default: 0.13.4

  - name: installConftest
    type: boolean
    default: true

  - name: conftestVersion
    type: string
    default: 0.21.0

  - name: installTFLint
    type: boolean
    default: true

  - name: tflintVersion
    type: string
    default: 0.20.2

  - name: tflintRulesetAzurermVersion
    type: string
    default: 0.5.0

stages:
  - stage: Validation
    displayName: "Terraform Static Analysis"
    variables:
      - ${{ each vg in parameters.varGroups }}:
          - group: ${{ vg }}
      - name: System.Debug
        value: ${{ parameters.debug }}
      - name: installTerraformBinary
        value: ${{ parameters.installTerraform }}
      - name: installConftestBinary
        value: ${{ parameters.installConftest }}
      - name: installTFLintBinary
        value: ${{ parameters.installTFLint }}
    jobs:
      - job: Validation
        displayName: "Terraform Static Analysis"
        pool:
          vmImage: ${{ parameters.vmImage }}
        workspace:
          clean: all
        steps:
          - checkout: self
            persistCredentials: true

          - template: install-terraform.yml
            condition: and(succeeded(), eq(variables['installTerraformBinary'], true))
            parameters:
              terraformVersion: ${{ parameters.terraformVersion }}

          - template: install-conftest.yml
            condition: and(succeeded(), eq(variables['installConftestBinary'], true))
            parameters:
              conftestVersion: ${{ parameters.conftestVersion }}

          - template: install-tflint.yml
            condition: and(succeeded(), eq(variables['installTFLintBinary'], true))
            parameters:
              tflintVersion: ${{ parameters.tflintVersion }}
              tflintRulesetAzurermVersion: ${{ parameters.tflintRulesetAzurermVersion }}
