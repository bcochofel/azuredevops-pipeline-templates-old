parameters:
  - name: workingDirectory
    type: string

  - name: environmentVars
    type: object

  - name: runAll
    type: boolean

  - name: prComments
    type: boolean

  - name: planExtraArgs
    type: string

  - name: tfPlanFile
    type: string

  - name: tfJSONFile
    type: string

  - name: prePlanSteps
    type: stepList

  - name: postPlanSteps
    type: stepList

steps:
  - ${{ each step in parameters.prePlanSteps }}:
      - ${{ step }}

  - task: Bash@3
    displayName: "[terragrunt plan]"
    condition: and(succeeded(), eq('${{ parameters.runAll }}', false))
    inputs:
      targetType: 'inline'
      workingDirectory: ${{ parameters.workingDirectory }}
      script: |
        set -eu
        terragrunt plan -input=false -out=${{ parameters.tfPlanFile }} ${{ parameters.planExtraArgs }}
    env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)
      # add custom environment variables for plan
      ${{ each envVar in parameters.environmentVars }}:
        ${{ envVar.key }}: ${{ envVar.Value }}

  - task: Bash@3
    displayName: "[terragrunt plan-all]"
    condition: and(succeeded(), eq('${{ parameters.runAll }}', true))
    inputs:
      targetType: 'inline'
      workingDirectory: ${{ parameters.workingDirectory }}
      script: |
        set -eu
        terragrunt plan-all -input=false -out=${{ parameters.tfPlanFile }} ${{ parameters.planExtraArgs }}
    env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)
      # add custom environment variables for plan
      ${{ each envVar in parameters.environmentVars }}:
        ${{ envVar.key }}: ${{ envVar.Value }}

  - task: Bash@3
    displayName: "[terragrunt show]"
    condition: and(succeeded(), eq('${{ parameters.runAll }}', false))
    inputs:
      targetType: 'inline'
      workingDirectory: ${{ parameters.workingDirectory }}
      script: |
        set -eu
        terragrunt show -no-color -json ${{ parameters.tfPlanFile }} > ${{ parameters.tfJSONFile }}
    env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)

  - ${{ each step in parameters.postPlanSteps }}:
      - ${{ step }}

  - template: pr-comments.yml
    parameters:
      workingDirectory: ${{ parameters.workingDirectory }}
      prComments: ${{ parameters.prComments }}
      tfJSONFile: ${{ parameters.tfJSONFile }}
